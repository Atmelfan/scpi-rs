name: "Publish"

on:
  release:
    types: [published]

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86-unknown-linux-gnu
          - thumbv6m-none-eabi
          - thumbv7m-none-eabi
          - thumbv7em-none-eabi
          - thumbv7em-none-eabihf
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

      - name: Run cargo test with all features
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features
  
  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt, clippy

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
  
  publish:
    name: crates.io release
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [check, test, lints]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - id: get_version
        uses: battila7/get-version-action@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install cargo-workspaces
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-workspaces
      
      - name: Publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
          VERSION: ${{ steps.get_version.outputs.version-without-v }}
        shell: bash
        run: |
          git config --global user.email "runner@gha.local"
          git config --global user.name "Github Action"
          cargo workspaces publish --yes --force '*' --exact --no-git-commit --allow-dirty --skip-published custom $VERSION