# Based on https://github.com/actions-rs/meta/blob/master/recipes/quickstart.md
#
# While our "example" application has the platform-specific code,
# for simplicity we are compiling and testing everything on the Ubuntu environment only.
# For multi-OS testing see the `cross.yml` workflow.

on: [push, pull_request, workflow_dispatch]

name: Fuzzing

jobs:
  coverage:
    name: Fuzzing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        fuzz-targets:
          - command
          - channel_list
          - numeric_list

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install nightly toolchain
        uses: dtolnay/rust-toolchain@nightly

      - name: Install cargo-fuzz
        run: cargo install cargo-fuzz

      - name: Fuzz ${{ matrix.fuzz-targets }}
        run: |
          cd scpi && cargo +nightly fuzz run ${{ matrix.fuzz-targets }} -- -max_total_time=300

      - name: Upload failing inputs for Tokenizer
        uses: actions/upload-artifact@v2
        with:
          name: fuzz_target_1
          path: scpi/fuzz/artifacts/${{ matrix.fuzz-targets }}/*
        
      - name: Generate coverage data
        run: cargo fuzz coverage ${{ matrix.fuzz-targets }}
      
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          # token: ${{secrets.CODECOV_TOKEN}} # not required for public repos
          flags: fuzzing-${{ matrix.fuzz-targets }}
          files: scpi/fuzz/coverage/${{ matrix.fuzz-targets }}/*
          fail_ci_if_error: true
